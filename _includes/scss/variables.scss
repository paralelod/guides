
// devices
$device-x-small:"screen and (max-width: 375px)";
$device-small:"screen and (max-width: 767px)";
$device-small-landscape: "screen and (max-width: 767px) and (orientation: landscape)";
$device-medium: "screen and (max-width: 1023px) and (min-width:768px)";
$device-medium-small: "screen and ( max-width: 1023px)";
$device-large:"screen and (min-width: 1024px)";

// fonts
$font-serif: "museo-slab",serif;
$font-sans-serif: "proxima-soft", sans-serif;

// colors
$dark: black;
$mid: rgba( $dark, .65 );
$mid-light: rgba( $dark, .15 );
$light: white;

$site-bg: $light; //#FCFCFC;
$nav-bg: rgba( $light, .9 );
$card-shadow: rgba( $dark, .06 );

// layout
$gutter: 3rem;
$box: 95%;






// mixins

// vendor prefixes

@mixin vendor-prefix($name, $value) {
    @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
      #{$vendor}#{$name}: #{$value};
    }
  }

// generic transform
@mixin transform($transforms) {
    @include vendor-prefix('transform',$transforms);
}

// translate
@mixin translate ($x,$y) {
    @include transform('translate('+$x+','+$y+')')
}

@mixin translate ($x,$y) {
    @include transform('translate('+$x+','+$y+')')
}






@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content; 
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    } 
}

// use of keyframes mixin
@include keyframes(gradientAnim) {
    0%{background-position:0% 17%}
    50%{background-position:100% 84%}
    100%{background-position:0% 17%}
  }

@mixin bgGradientAnim ($color1, $color2, $animationName){
    will-change: background-position;
    background-size:cover;
    background: linear-gradient(310deg, $color1, $color2);
    background-size: 200% 200%;
    background-position: center;
    // @include vendor-prefix('animation', $animationName '12s ease infinite' );
}


@include keyframes(bounceArrow) {
    0% {
        transform: translateY(0);
      }
      100% {
        transform: translateY(10px);
      }
  }


@include keyframes(scrollBgDiagonalAnim) {
    0% {
        transform: translate3d(600px, 0, 0);
    }
    100% {
        transform: translate3d(0, -600px, 0);
    }
}
@include keyframes(scrollBgDiagonalAnimSmall) {
    0% {
        transform: translate3d(325px, 0, 0);
    }
    100% {
        transform: translate3d(0, -325px, 0);
    }
}

@mixin scrollBgDiagonalAnim ($bgSize,$bgUrl,$animation){
    will-change: transform;
    background-size: $bgSize;
    background: url($bgUrl);
    left:-$bgSize;
    background-position: -$bgSize;
    // animation: $animation 15s linear infinite;
  
}


// // rotate
// @mixin rotate ($deg) {
// @include transform(rotate(#{$deg}deg));
// }

// // scale
// @mixin scale($scale) {
//   @include transform(scale($scale));
// } 
// // translate
// @mixin translate ($x, $y) {
// @include transform(translate($x, $y));
// }
// // skew
// @mixin skew ($x, $y) {
// @include transform(skew(#{$x}deg, #{$y}deg));
// }
// //transform origin
// @mixin transform-origin ($origin) {
//  moz-transform-origin: $origin;
//       -o-transform-origin: $origin;
//      -ms-transform-origin: $origin;
//  -webkit-transform-origin: $origin;
//        transform-origin: $origin;
// }


// .test {
// @include skew(25,10);
// @include transform-origin(top left);
// position: absolute;
// top: 25%;
// bottom: 25%;
// left: 25%;
// right: 25%;
// background-color: rgba(20,20,20,.5);
// }



// overlay-color
// animtion infinite-slide
// hero container
// full-height


// box-sizing (containers)



 